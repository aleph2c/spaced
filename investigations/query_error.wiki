*recollection_scalar not working on controller and learning tracker*

= Observe/Goals and Inferences=
  *What defines Success?*
  The test curve in the test_predictions would be placed on the correct curve

  *What is the problem?*
  The test curve looks good, it's just 2 curves to high

  *Evidence that contradicts Assumptions (loop > 2):*
  # get the latest feedback number (float offset in days from epoch)
  control_x .= self.input_x[-1]
  # 
  # get the y value for this in our observed plasticity curve 
  y_input .= self.feedback.fn(control_x)
  # find the x value of this y value on the reference curve, using its invfn 
  # 
  x_reference_feedback_overlop .= self.reference.invfn(y_input)
  # find the beginning of the curve, by subtracing the last feedback point by
  # this overlap point.. this is where the control's reference curve will start
  x_reference_shift .= control_x - x_reference_feedback_overlop
  
= Orient/Homework =
  *Symptoms:*
  
  *Questions for recollection_scalar not working on controller and learning tracker:*
  
    * [X] Can you speed up your feedback cycle?
    * [ ] Can you simplify your test? [moot]
    * [ ] Do you have enough information?
    * [ ] What recently changed?
    * [ ] What is the x_reference_shift?
    
  *Data:*
  The algorithm was fixed recently.  The control plot was being called multiple
  times, which made it impossible to match a curve onto a diagram.
  
  The graph placement has an "off by 2 error".
  
  The recollection_scalar uses the updated_reference.fdfn function to get the
  forgetting function.  The updated_reference is something the control system
  creates, which has new forgetting curve parameters.  The fdfn function is the
  thing that generates a specific forgetting profile.

  The fdfn is generated by the forgetting_curves function in the reference
  class.  You feed the forgetting_curves function the forgetting curve
  parameters and it outputs a function that can be called to generate any
  forgetting curve.
  
  The fdfn function is called with the initial forgetting offset, this generates
  two functions, the function to generate a curve and it's inverse function
  which can be used to find the intersection between the forgetting function the
  plasticity curve.  The two returned functions are fed as inputs along with the
  initial forgetting offset to the forgetting_curves method.  This
  forgetting_curves function is called once per forgetting curve.
   

  *Assumptions:*

= Decide/Creative Work =
  *Idea/Hypotheses for recollection_scalar not working on controller and learning tracker: >=5*
  * [ ] 
  * [ ] 
  * [ ] 
  * [ ] 
  * [ ] 
  *Chosen Idea/Hypothesis (rank ordering and economics)*

  *Plan to Expand-on-Idea/Disprove-Hypothesis*

= Act =

